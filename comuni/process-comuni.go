// The following directive is necessary to make the package coherent:

// +build ignore

// Based on:
//  - https://blog.carlmjohnson.net/post/2016-11-27-how-to-use-go-generate/

// This program generates comuni/comuni-generated-data.go. It can be invoked by running
// go generate
package main

import (
	"bytes"
	"encoding/json"
	"text/template"
	"log"
	"net/http"
	"os"
	"path"
	"time"

	"github.com/panta/codicefiscale/comuni"
)

const (
	COMUNI_URL = "https://github.com/matteocontrini/comuni-json/blob/master/comuni.json?raw=true"
)

var (
	outputFilename string = path.Join("comuni", "comuni-generated-data.go")
)


func die(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

func readJSONFromUrl(url string) ([]comuni.Comune, error) {
	resp, err := http.Get(url)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()

	var comuniList []comuni.Comune
	buf := new(bytes.Buffer)
	buf.ReadFrom(resp.Body)
	respByte := buf.Bytes()
	if err := json.Unmarshal(respByte, &comuniList); err != nil {
		return nil, err
	}

	return comuniList, nil
}

func main() {
	comuniList, err := readJSONFromUrl(COMUNI_URL)
	die(err)

	catastale2comune := map[string]int{}
	for comuneIndex, comune := range comuniList {
		catastale2comune[comune.CodiceCatastale] = comuneIndex
	}

	now := time.Now()

	outputFile, err := os.Create(outputFilename)
	die(err)
	defer outputFile.Close()

	packageTemplate := template.Must(template.New("comuni-go").Parse(packageTemplateText))
	context := map[string]interface{}{
		"Comuni": comuniList,
		"Catastale2Comune": catastale2comune,
		"URL": COMUNI_URL,
		"Timestamp": now,
		"TimestampFormatted": now.Format(time.RFC3339),
	}
	packageTemplate.Execute(outputFile, context)
}

var packageTemplateText = `// Code generated by go generate; DO NOT EDIT.
//
// This file was automagically generated at
//   {{.Timestamp}}
// using data from
//   {{ .URL }}

package comuni

var Comuni = []Comune{
{{range .Comuni}}
	Comune{
		Cap:             []string{ {{range .Cap}}"{{.}}",{{end}} },
		Codice:          "{{.Codice}}",
		CodiceCatastale: "{{.CodiceCatastale}}",
		Nome:            "{{.Nome}}",
		Popolazione:     {{.Popolazione}},
		Provincia: Provincia{
			Codice: "{{.Provincia.Codice}}",
			Nome:   "{{.Provincia.Nome}}",
		},
		Regione: Regione{
			Codice: "{{.Regione.Codice}}",
			Nome:   "{{.Regione.Nome}}",
		},
		Sigla: "{{.Sigla}}",
		Zona: Zona{
			Codice: "{{.Zona.Codice}}",
			Nome:   "{{.Zona.Nome}}",
		},
	},
{{end}}
}

var Catastale2Comune = map[string]int{
{{ range $key, $value := .Catastale2Comune }}
   "{{ $key }}": {{ $value }},
{{ end }}
}

// Code generated - DO NOT EDIT
`
